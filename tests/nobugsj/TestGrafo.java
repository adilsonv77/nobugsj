package nobugsj;

import java.awt.Point;
import java.util.ArrayList;
import java.util.HashMap;

import pt.uc.dei.nobugssnackbar.grafos.Grafo;
import pt.uc.dei.nobugssnackbar.grafos.Vertice;

public class TestGrafo {

	
	private static void createPath(Grafo graph) {
		//graph = new Grafo();
		
		graph.addAresta(2, "n2", "n1");
		graph.addAresta(2, "n2", "n3");
		graph.addAresta(2, "n3", "n2");
		graph.addAresta(2, "n3", "n4");
		graph.addAresta(2, "n4", "n3");
		graph.addAresta(2, "n4", "n5");
		graph.addAresta(2, "n5", "n4");
		graph.addAresta(2, "n5", "n6");
		graph.addAresta(2, "n6", "n5");
		graph.addAresta(2, "n6", "n7");
		graph.addAresta(2, "n7", "n6");
		graph.addAresta(2, "n7", "n8");
		graph.addAresta(2, "n8", "n7");
		graph.addAresta(2, "n8", "n9");
		graph.addAresta(2, "n9", "n8");
		graph.addAresta(2, "n9", "n10");
		graph.addAresta(2, "n10", "n9");
		graph.addAresta(2, "n10", "n11");
		graph.addAresta(2, "n12", "n11");
		graph.addAresta(2, "n12", "n13");
		graph.addAresta(2, "n13", "n12");
		graph.addAresta(2, "n13", "n14");
		graph.addAresta(2, "n14", "n13");
		graph.addAresta(2, "n14", "n15");
		graph.addAresta(2, "n15", "n14");
		graph.addAresta(2, "n15", "n16");
		graph.addAresta(2, "n16", "n15");
		graph.addAresta(2, "n16", "n17");
		graph.addAresta(2, "n17", "n16");
		graph.addAresta(2, "n17", "n18");
		graph.addAresta(2, "n18", "n17");
		graph.addAresta(2, "n18", "n19");
		graph.addAresta(2, "n19", "n18");
		graph.addAresta(2, "n19", "n20");
		graph.addAresta(2, "n20", "n19");
		graph.addAresta(2, "n20", "n21");
		graph.addAresta(1, "n22", "n21");
		graph.addAresta(1, "n22", "n23");
		graph.addAresta(1, "n23", "n22");
		graph.addAresta(1, "n23", "n24");
		graph.addAresta(1, "n24", "n23");
		graph.addAresta(1, "n24", "n25");
		graph.addAresta(1, "n25", "n24");
		graph.addAresta(1, "n25", "n26");
		graph.addAresta(1, "n26", "n25");
		graph.addAresta(1, "n26", "n27");
		graph.addAresta(1, "n27", "n26");
		graph.addAresta(1, "n27", "n28");
		graph.addAresta(1, "n28", "n27");
		graph.addAresta(1, "n28", "n29");
		graph.addAresta(1, "n29", "n28");
		graph.addAresta(1, "n29", "n30");
		graph.addAresta(1, "n30", "n29");
		graph.addAresta(1, "n30", "n31");
		graph.addAresta(2, "n32", "n31");
		graph.addAresta(2, "n32", "n33");
		graph.addAresta(2, "n33", "n32");
		graph.addAresta(2, "n33", "n34");
		graph.addAresta(2, "n34", "n33");
		graph.addAresta(2, "n34", "n35");
		graph.addAresta(2, "n35", "n34");
		graph.addAresta(2, "n35", "n36");
		graph.addAresta(2, "n36", "n35");
		graph.addAresta(2, "n36", "n37");
		graph.addAresta(2, "n37", "n36");
		graph.addAresta(2, "n37", "n38");
		graph.addAresta(2, "n38", "n37");
		graph.addAresta(2, "n38", "n39");
		graph.addAresta(2, "n39", "n38");
		graph.addAresta(2, "n39", "n40");
		graph.addAresta(2, "n40", "n39");
		graph.addAresta(2, "n40", "n11");
		graph.addAresta(1, "n41", "n31");
		graph.addAresta(1, "n41", "n42");
		graph.addAresta(1, "n42", "n41");
		graph.addAresta(1, "n42", "n43");
		graph.addAresta(1, "n43", "n42");
		graph.addAresta(1, "n43", "n44");
		graph.addAresta(1, "n44", "n43");
		graph.addAresta(1, "n44", "n45");
		graph.addAresta(1, "n45", "n44");
		graph.addAresta(1, "n45", "n46");
		graph.addAresta(1, "n46", "n45");
		graph.addAresta(1, "n46", "n47");
		graph.addAresta(1, "n47", "n46");
		graph.addAresta(1, "n47", "n48");
		graph.addAresta(1, "n48", "n47");
		graph.addAresta(1, "n48", "n49");
		graph.addAresta(1, "n49", "n48");
		graph.addAresta(1, "n49", "n50");
		graph.addAresta(1, "n50", "n49");
		graph.addAresta(1, "n50", "n51");
		graph.addAresta(1, "n51", "n50");
		graph.addAresta(1, "n51", "n52");
		graph.addAresta(1, "n52", "n51");
		graph.addAresta(1, "n52", "n53");
		graph.addAresta(1, "n53", "n52");
		graph.addAresta(1, "n53", "n54");
		graph.addAresta(1, "n54", "n53");
		graph.addAresta(1, "n54", "n55");
		graph.addAresta(1, "n55", "n54");
		graph.addAresta(1, "n55", "n56");
		graph.addAresta(1, "n56", "n55");
		graph.addAresta(1, "n56", "n57");
		graph.addAresta(1, "n57", "n56");
		graph.addAresta(1, "n57", "n58");
		graph.addAresta(1, "n58", "n57");
		graph.addAresta(1, "n58", "n59");
		graph.addAresta(1, "n59", "n58");
		graph.addAresta(1, "n59", "n1");
		graph.addAresta(2, "n60", "n1");
		graph.addAresta(2, "n60", "n61");
		graph.addAresta(2, "n61", "n60");
		graph.addAresta(2, "n61", "n62");
		graph.addAresta(2, "n62", "n61");
		graph.addAresta(2, "n62", "n63");
		graph.addAresta(2, "n63", "n62");
		graph.addAresta(2, "n63", "n64");
		graph.addAresta(2, "n64", "n63");
		graph.addAresta(2, "n64", "n65");
		graph.addAresta(2, "n65", "n64");
		graph.addAresta(2, "n65", "n66");
		graph.addAresta(2, "n66", "n65");
		graph.addAresta(2, "n66", "n67");
		graph.addAresta(2, "n67", "n66");
		graph.addAresta(2, "n67", "n68");
		graph.addAresta(2, "n68", "n67");
		graph.addAresta(2, "n68", "n69");
		graph.addAresta(1, "n70", "n31");
		graph.addAresta(1, "n70", "n71");
		graph.addAresta(1, "n71", "n70");
		graph.addAresta(1, "n71", "n72");
		graph.addAresta(1, "n72", "n71");
		graph.addAresta(1, "n72", "n73");
		graph.addAresta(1, "n73", "n72");
		graph.addAresta(1, "n73", "n74");
		graph.addAresta(1, "n74", "n73");
		graph.addAresta(1, "n74", "n75");
		graph.addAresta(1, "n75", "n74");
		graph.addAresta(1, "n75", "n76");
		graph.addAresta(1, "n76", "n75");
		graph.addAresta(1, "n76", "n77");
		graph.addAresta(1, "n77", "n76");
		graph.addAresta(1, "n77", "n78");
		graph.addAresta(1, "n78", "n77");
		graph.addAresta(1, "n78", "n79");
		graph.addAresta(1, "n80", "n79");
		graph.addAresta(1, "n80", "n81");
		graph.addAresta(1, "n81", "n80");
		graph.addAresta(1, "n81", "n82");
		graph.addAresta(1, "n82", "n81");
		graph.addAresta(1, "n82", "n83");
		graph.addAresta(1, "n83", "n82");
		graph.addAresta(1, "n83", "n84");
		graph.addAresta(1, "n84", "n83");
		graph.addAresta(1, "n84", "n85");
		graph.addAresta(1, "n85", "n84");
		graph.addAresta(1, "n85", "n86");
		graph.addAresta(1, "n86", "n85");
		graph.addAresta(1, "n86", "n87");
		graph.addAresta(1, "n87", "n86");
		graph.addAresta(1, "n87", "n88");
		graph.addAresta(1, "n88", "n87");
		graph.addAresta(1, "n88", "n89");
		graph.addAresta(1, "n89", "n88");
		graph.addAresta(1, "n89", "n90");
		graph.addAresta(1, "n90", "n89");
		graph.addAresta(1, "n90", "n91");
		graph.addAresta(1, "n91", "n90");
		graph.addAresta(1, "n91", "n92");
		graph.addAresta(1, "n92", "n91");
		graph.addAresta(1, "n92", "n93");
		graph.addAresta(1, "n93", "n92");
		graph.addAresta(1, "n93", "n94");
		graph.addAresta(1, "n94", "n93");
		graph.addAresta(1, "n94", "n95");
		graph.addAresta(1, "n95", "n94");
		graph.addAresta(1, "n95", "n96");
		graph.addAresta(1, "n96", "n95");
		graph.addAresta(1, "n96", "n97");
		graph.addAresta(1, "n97", "n96");
		graph.addAresta(1, "n97", "n98");
		graph.addAresta(1, "n98", "n97");
		graph.addAresta(1, "n98", "n99");
		graph.addAresta(1, "n99", "n98");
		graph.addAresta(1, "n99", "n1");
		graph.addAresta(2, "n100", "n79");
		graph.addAresta(2, "n100", "n101");
		graph.addAresta(2, "n101", "n100");
		graph.addAresta(2, "n101", "n102");
		graph.addAresta(2, "n102", "n101");
		graph.addAresta(2, "n102", "n103");
		graph.addAresta(2, "n103", "n102");
		graph.addAresta(2, "n103", "n104");
		graph.addAresta(2, "n104", "n103");
		graph.addAresta(2, "n104", "n105");
		graph.addAresta(2, "n105", "n104");
		graph.addAresta(2, "n105", "n106");
		graph.addAresta(2, "n107", "n106");
		graph.addAresta(2, "n107", "n108");
		graph.addAresta(2, "n108", "n107");
		graph.addAresta(2, "n108", "n109");
		graph.addAresta(2, "n109", "n108");
		graph.addAresta(2, "n109", "n110");
		graph.addAresta(2, "n110", "n109");
		graph.addAresta(2, "n110", "n111");
		graph.addAresta(2, "n111", "n110");
		graph.addAresta(2, "n111", "n112");
		graph.addAresta(2, "n112", "n111");
		graph.addAresta(2, "n112", "n113");
		graph.addAresta(2, "n113", "n112");
		graph.addAresta(2, "n113", "n114");
		graph.addAresta(2, "n114", "n113");
		graph.addAresta(2, "n114", "n115");
		graph.addAresta(2, "n115", "n114");
		graph.addAresta(2, "n115", "n116");
		graph.addAresta(2, "n116", "n115");
		graph.addAresta(2, "n116", "n1");
		graph.addAresta(2, "n117", "n106");
		graph.addAresta(2, "n117", "n118");
		graph.addAresta(2, "n118", "n117");
		graph.addAresta(2, "n118", "n119");
		graph.addAresta(2, "n119", "n118");
		graph.addAresta(2, "n119", "n120");
		graph.addAresta(2, "n120", "n119");
		graph.addAresta(2, "n120", "n121");
		graph.addAresta(2, "n121", "n120");
		graph.addAresta(2, "n121", "n122");
		graph.addAresta(2, "n122", "n121");
		graph.addAresta(2, "n122", "n123");
		graph.addAresta(2, "n123", "n122");
		graph.addAresta(2, "n123", "n124");
		graph.addAresta(2, "n124", "n123");
		graph.addAresta(2, "n124", "n125");
		graph.addAresta(2, "n125", "n124");
		graph.addAresta(2, "n125", "n126");
		graph.addAresta(2, "n126", "n125");
		graph.addAresta(2, "n126", "n69");
		graph.addAresta(2, "n128", "n127");
		graph.addAresta(2, "n128", "n129");
		graph.addAresta(2, "n129", "n128");
		graph.addAresta(2, "n129", "n130");
		graph.addAresta(2, "n130", "n129");
		graph.addAresta(2, "n130", "n131");
		graph.addAresta(2, "n131", "n130");
		graph.addAresta(2, "n131", "n132");
		graph.addAresta(2, "n132", "n131");
		graph.addAresta(2, "n132", "n133");
		graph.addAresta(2, "n133", "n132");
		graph.addAresta(2, "n133", "n134");
		graph.addAresta(2, "n134", "n133");
		graph.addAresta(2, "n134", "n135");
		graph.addAresta(2, "n135", "n134");
		graph.addAresta(2, "n135", "n136");
		graph.addAresta(2, "n136", "n135");
		graph.addAresta(2, "n136", "n137");
		graph.addAresta(2, "n137", "n136");
		graph.addAresta(2, "n137", "n1");
		graph.addAresta(2, "n138", "n127");
		graph.addAresta(2, "n138", "n139");
		graph.addAresta(2, "n139", "n138");
		graph.addAresta(2, "n139", "n140");
		graph.addAresta(2, "n140", "n139");
		graph.addAresta(2, "n140", "n141");
		graph.addAresta(2, "n141", "n140");
		graph.addAresta(2, "n141", "n142");
		graph.addAresta(2, "n142", "n141");
		graph.addAresta(2, "n142", "n143");
		graph.addAresta(2, "n143", "n142");
		graph.addAresta(2, "n143", "n144");
		graph.addAresta(2, "n144", "n143");
		graph.addAresta(2, "n144", "n145");
		graph.addAresta(2, "n145", "n144");
		graph.addAresta(2, "n145", "n146");
		graph.addAresta(2, "n146", "n145");
		graph.addAresta(2, "n146", "n147");
		graph.addAresta(2, "n147", "n146");
		graph.addAresta(2, "n147", "n11");
		graph.addAresta(2, "n149", "n148");
		graph.addAresta(2, "n149", "n150");
		graph.addAresta(2, "n150", "n149");
		graph.addAresta(2, "n150", "n151");
		graph.addAresta(2, "n151", "n150");
		graph.addAresta(2, "n151", "n152");
		graph.addAresta(2, "n152", "n151");
		graph.addAresta(2, "n152", "n153");
		graph.addAresta(2, "n153", "n152");
		graph.addAresta(2, "n153", "n154");
		graph.addAresta(2, "n154", "n153");
		graph.addAresta(2, "n154", "n155");
		graph.addAresta(2, "n155", "n154");
		graph.addAresta(2, "n155", "n156");
		graph.addAresta(2, "n156", "n155");
		graph.addAresta(2, "n156", "n157");
		graph.addAresta(2, "n157", "n156");
		graph.addAresta(2, "n157", "n158");
		graph.addAresta(2, "n158", "n157");
		graph.addAresta(2, "n158", "n159");
		graph.addAresta(2, "n159", "n158");
		graph.addAresta(2, "n159", "n1");
		graph.addAresta(2, "n148", "n160");
		graph.addAresta(2, "n148", "n149");
		graph.addAresta(2, "n160", "n148");
		graph.addAresta(2, "n160", "n161");
		graph.addAresta(2, "n161", "n160");
		graph.addAresta(2, "n161", "n162");
		graph.addAresta(2, "n162", "n161");
		graph.addAresta(2, "n162", "n163");
		graph.addAresta(2, "n163", "n162");
		graph.addAresta(2, "n163", "n164");
		graph.addAresta(2, "n164", "n163");
		graph.addAresta(2, "n164", "n165");
		graph.addAresta(2, "n165", "n164");
		graph.addAresta(2, "n165", "n166");
		graph.addAresta(2, "n166", "n165");
		graph.addAresta(2, "n166", "n167");
		graph.addAresta(2, "n167", "n166");
		graph.addAresta(2, "n167", "n168");
		graph.addAresta(2, "n168", "n167");
		graph.addAresta(2, "n168", "n169");
		graph.addAresta(2, "n169", "n168");
		graph.addAresta(2, "n169", "n170");
		graph.addAresta(2, "n170", "n169");
		graph.addAresta(2, "n170", "n171");
		graph.addAresta(2, "n171", "n170");
		graph.addAresta(2, "n171", "n172");
		graph.addAresta(2, "n172", "n171");
		graph.addAresta(2, "n172", "n173");
		graph.addAresta(2, "n173", "n172");
		graph.addAresta(2, "n173", "n174");
		graph.addAresta(2, "n174", "n173");
		graph.addAresta(2, "n174", "n175");
		graph.addAresta(2, "n175", "n174");
		graph.addAresta(2, "n175", "n176");
		graph.addAresta(2, "n176", "n175");
		graph.addAresta(2, "n176", "n177");
		graph.addAresta(2, "n177", "n176");
		graph.addAresta(2, "n177", "n178");
		graph.addAresta(2, "n178", "n177");
		graph.addAresta(2, "n178", "n179");
		graph.addAresta(2, "n1", "n2");
		graph.addAresta(2, "n1", "n59");
		graph.addAresta(2, "n1", "n60");
		graph.addAresta(2, "n1", "n99");
		graph.addAresta(2, "n1", "n116");
		graph.addAresta(2, "n1", "n137");
		graph.addAresta(2, "n1", "n159");
		graph.addAresta(2, "n11", "n10");
		graph.addAresta(2, "n11", "n12");
		graph.addAresta(2, "n11", "n40");
		graph.addAresta(2, "n11", "n147");
		graph.addAresta(2, "n11", "nIceCream3");
		graph.addAresta(2, "n21", "n20");
		graph.addAresta(2, "n21", "n22");
		graph.addAresta(2, "n31", "n30");
		graph.addAresta(2, "n31", "n32");
		graph.addAresta(2, "n31", "n41");
		graph.addAresta(2, "n31", "n70");
		graph.addAresta(2, "n79", "n78");
		graph.addAresta(2, "n79", "n80");
		graph.addAresta(2, "n79", "n80");
		graph.addAresta(2, "n79", "n100");
		graph.addAresta(2, "n106", "n105");
		graph.addAresta(2, "n106", "n107");
		graph.addAresta(2, "n106", "n117");
		graph.addAresta(2, "n127", "n128");
		graph.addAresta(2, "n127", "n138");
		graph.addAresta(2, "n69", "n68");
		graph.addAresta(2, "n69", "n126");
		
		graph.addAresta(2, "nIceCream3", "n11");
		graph.addAresta(2, "nIceCream3", "nIceCream2");

		graph.addAresta(2, "nIceCream2", "n11");
		graph.addAresta(2, "nIceCream2", "nIceCream1");
		
		graph.addAresta(2, "nIceCream1", "nIceCream2");
		graph.addAresta(2, "nIceCream1", "nIceCream");

		graph.addAresta(2, "nIceCream", "nIceCream1");
		graph.addAresta(2, "nIceCream", "n14");
		graph.addAresta(2, "nIceCream", "n12");
		graph.addAresta(2, "nIceCream", "nCoffee1");

		graph.addAresta(2, "nCoffee1", "nIceCream1");
		graph.addAresta(2, "nCoffee1", "nCoffee2");
		
		graph.addAresta(2, "nCoffee2", "nCoffee1");
		graph.addAresta(2, "nCoffee2", "nCoffee3");

		graph.addAresta(2, "nCoffee3", "nCoffee2");
		graph.addAresta(2, "nCoffee3", "nCoffee");
		
		graph.addAresta(2, "nCoffee", "nCoffee3");

	}

	public static void main(String[] args) {
		
		Grafo g = new Grafo();
		createPath(g);
		/*
		g.addVertice("A");
		g.addVertice("B");
		g.addVertice("C");
		g.addVertice("D");
		
		g.addAresta(50, "A", "B");
		g.addAresta(0, "B", "A");
		g.addAresta(0, "A", "C");
		
		g.addAresta(0, "B", "C");
		g.addAresta(0, "B", "D");
		
		ArrayList<Vertice> vertices = g.encontrarMenorCaminhoDijkstra(g.acharVertice("D"), g.acharVertice("A"));
		*/
		
		ArrayList<Vertice> vertices = g.encontrarMenorCaminhoDijkstra(g.acharVertice("n21"), g.acharVertice("n79"));
		System.out.println(vertices.size());
	}
	
}
